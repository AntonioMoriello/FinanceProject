@model TransactionListViewModel

@{
    ViewData["Title"] = "Transactions";
}

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Transactions</h1>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add Transaction
        </a>
    </div>

    <!-- Filters -->
    <div class="card shadow mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="card-title mb-0">Filters</h5>
        </div>
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Start Date</label>
                    <input type="date" name="startDate" class="form-control"
                           value="@Model.StartDate?.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-3">
                    <label class="form-label">End Date</label>
                    <input type="date" name="endDate" class="form-control"
                           value="@Model.EndDate?.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Category</label>
                    <select name="categoryId" class="form-select" asp-items="@(new SelectList(Model.Categories, "CategoryId", "Name"))">
                        <option value="">All Categories</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Type</label>
                    <select name="type" class="form-select" asp-items="Html.GetEnumSelectList<TransactionType>()">
                        <option value="">All Types</option>
                    </select>
                </div>
                <div class="col-12">
                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                    <a asp-action="Index" class="btn btn-secondary">Reset</a>
                </div>
            </form>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card shadow border-success">
                <div class="card-body">
                    <h5 class="card-title text-success">Total Income</h5>
                    <h2>@Model.TotalIncome.ToString("C")</h2>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow border-danger">
                <div class="card-body">
                    <h5 class="card-title text-danger">Total Expenses</h5>
                    <h2>@Model.TotalExpenses.ToString("C")</h2>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow border-primary">
                <div class="card-body">
                    <h5 class="card-title text-primary">Net Amount</h5>
                    <h2 class="@(Model.NetAmount >= 0 ? "text-success" : "text-danger")">
                        @Model.NetAmount.ToString("C")
                    </h2>
                </div>
            </div>
        </div>
    </div>

    <!-- Transactions Table -->
    <div class="card shadow">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="transactionsTable">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Category</th>
                            <th>Description</th>
                            <th>Type</th>
                            <th class="text-end">Amount</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Model.Transactions)

                        {
                            <tr>
                                <td>@transaction.Date.ToShortDateString()</td>
                                <td>
                                    <span class="badge" style="background-color: @transaction.Category.ColorCode">
                                        @transaction.Category.Name
                                    </span>
                                </td>
                                <td>@transaction.Description</td>
                                <td>
                                    <span class="badge bg-@(transaction.Type == TransactionType.Income ? "success" : "danger")">
                                        @transaction.Type
                                    </span>
                                </td>
                                <td class="text-end @(transaction.Type == TransactionType.Income ? "text-success" : "text-danger")">
                                    @transaction.Amount.ToString("C")
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <a asp-action="Edit" asp-route-id="@transaction.TransactionId"
                                           class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Details" asp-route-id="@transaction.TransactionId"
                                           class="btn btn-sm btn-outline-info">
                                            <i class="fas fa-info-circle"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@transaction.TransactionId"
                                           class="btn btn-sm btn-outline-danger">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Category Distribution Chart -->
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header">
                    <h5 class="card-title mb-0">Category Distribution</h5>
                </div>
                <div class="card-body">
                    <canvas id="categoryChart" height="300"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header">
                    <h5 class="card-title mb-0">Category Totals</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Category</th>
                                    <th class="text-end">Total</th>
                                    <th class="text-end">Percentage</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var category in Model.CategoryTotals)

                                {
                                    <tr>
                                        <td>@category.Key</td>
                                        <td class="text-end">@category.Value.ToString("C")</td>
                                        <td class="text-end">
                                            @(((category.Value / Model.TotalExpenses) * 100).ToString("F1"))%
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize category chart
            const categoryCtx = document.getElementById('categoryChart').getContext('2d');
            new Chart(categoryCtx, {
                type: 'pie',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.CategoryTotals.Keys)),
                    datasets: [{
                        data: @Html.Raw(Json.Serialize(Model.CategoryTotals.Values)),
                        backgroundColor: [
                            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',
                            '#FF9F40', '#4BC0C0', '#FF6384', '#36A2EB', '#FFCE56'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'right'
                        }
                    }
                }
            });
        });
    </script>
}